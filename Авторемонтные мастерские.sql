-- Таблица владельцев автомобилей
CREATE TABLE Владельцы (
    ID_владельца INT PRIMARY KEY IDENTITY(1,1),
    Номер_прав NVARCHAR(20) NOT NULL UNIQUE,
    ФИО NVARCHAR(100) NOT NULL,
    Адрес NVARCHAR(200),
    Телефон NVARCHAR(20)
);

-- Таблица автомобилей
CREATE TABLE Автомобили (
    ID_автомобиля INT PRIMARY KEY IDENTITY(1,1),
    Номер_авто NVARCHAR(15) NOT NULL UNIQUE,
    Марка NVARCHAR(50) NOT NULL,
    Модель NVARCHAR(50),
    Мощность INT CHECK (Мощность > 0),
    Год_выпуска INT NOT NULL CHECK (Год_выпуска > 1900),
    Цвет NVARCHAR(30),
    ID_владельца INT NOT NULL,
    FOREIGN KEY (ID_владельца) REFERENCES Владельцы(ID_владельца)
);

-- Таблица механиков
CREATE TABLE Механики (
    ID_механика INT PRIMARY KEY IDENTITY(1,1),
    Табельный_номер NVARCHAR(10) NOT NULL UNIQUE,
    ФИО NVARCHAR(100) NOT NULL,
    Адрес NVARCHAR(200),
    Телефон NVARCHAR(20),
    Разряд INT CHECK (Разряд BETWEEN 1 AND 8)
);

-- Таблица мастерских
CREATE TABLE Мастерские (
    ID_мастерской INT PRIMARY KEY IDENTITY(1,1),
    Номер_мастерской NVARCHAR(10) NOT NULL UNIQUE,
    Название NVARCHAR(100) NOT NULL,
    Адрес NVARCHAR(200) NOT NULL,
    Телефон NVARCHAR(20)
);

-- Таблица категорий работ
CREATE TABLE Категории_работ (
    ID_категории INT PRIMARY KEY IDENTITY(1,1),
    Название_категории NVARCHAR(50) NOT NULL UNIQUE,
    Описание NVARCHAR(200)
);

-- Таблица нарядов на ремонт
CREATE TABLE Наряды (
    ID_наряда INT PRIMARY KEY IDENTITY(1,1),
    ID_автомобиля INT NOT NULL,
    ID_мастерской INT NOT NULL,
    Стоимость DECIMAL(10,2) CHECK (Стоимость >= 0),
    Дата_выдачи DATE NOT NULL,
    Плановая_дата_окончания DATE NOT NULL,
    Реальная_дата_окончания DATE,
    ID_категории INT NOT NULL,
    FOREIGN KEY (ID_автомобиля) REFERENCES Автомобили(ID_автомобиля),
    FOREIGN KEY (ID_мастерской) REFERENCES Мастерские(ID_мастерской),
    FOREIGN KEY (ID_категории) REFERENCES Категории_работ(ID_категории),
    CHECK (Плановая_дата_окончания >= Дата_выдачи),
    CHECK (Реальная_дата_окончания >= Дата_выдачи OR Реальная_дата_окончания IS NULL)
);

-- Таблица назначений механиков (многие-ко-многим)
CREATE TABLE Назначения_механиков (
    ID_назначения INT PRIMARY KEY IDENTITY(1,1),
    ID_наряда INT NOT NULL,
    ID_механика INT NOT NULL,
    FOREIGN KEY (ID_наряда) REFERENCES Наряды(ID_наряда),
    FOREIGN KEY (ID_механика) REFERENCES Механики(ID_механика),
    UNIQUE (ID_наряда, ID_механика)
);

-- Заполнение владельцев
INSERT INTO Владельцы (Номер_прав, ФИО, Адрес, Телефон) VALUES
('AB123456', 'Иванов Сергей Петрович', 'ул. Ленина, 10', '+79001234567'),
('CD654321', 'Петров Андрей Иванович', 'ул. Гагарина, 25', '+79007654321'),
('EF789012', 'Сидорова Мария Владимировна', 'ул. Пушкина, 33', '+79009876543');

-- Заполнение автомобилей
INSERT INTO Автомобили (Номер_авто, Марка, Модель, Мощность, Год_выпуска, Цвет, ID_владельца) VALUES
('А123БВ777', 'Mercedes-Benz', '600', 300, 2015, 'черный', 1),
('В456ТУ777', 'Volkswagen', 'Golf', 150, 2018, 'синий', 2),
('С789ОР777', 'GAZ', 'М-20 Победа', 52, 1948, 'бежевый', 3),
('Х123ХХ777', 'Mercedes-Benz', '600', 350, 2020, 'серебристый', 1),
('У456УУ777', 'ZIS', '110', 140, 1946, 'черный', 2);

-- Заполнение механиков
INSERT INTO Механики (Табельный_номер, ФИО, Адрес, Телефон, Разряд) VALUES
('M001', 'Кузнецов Алексей Дмитриевич', 'ул. Мира, 15', '+79051112233', 6),
('M002', 'Смирнова Ольга Игоревна', 'ул. Садовая, 22', '+79052223344', 5),
('M003', 'Попов Владимир Сергеевич', 'ул. Лесная, 7', '+79053334455', 7),
('M004', 'Васильев Игорь Николаевич', 'ул. Речная, 12', '+79054445566', 4);

-- Заполнение мастерских
INSERT INTO Мастерские (Номер_мастерской, Название, Адрес, Телефон) VALUES
('MS001', 'Автосервис на Ленина', 'ул. Ленина, 50', '+74951234567'),
('MS002', 'Техцентр ГАЗ', 'ул. Автозаводская, 10', '+74957654321'),
('MS003', 'Премиум Сервис', 'ул. Центральная, 1', '+74959876543');

-- Заполнение категорий работ
INSERT INTO Категории_работ (Название_категории, Описание) VALUES
('Двигатель', 'Ремонт и обслуживание двигателя'),
('Трансмиссия', 'Ремонт коробки передач и сцепления'),
('Электрика', 'Ремонт электрооборудования'),
('Кузовные работы', 'Ремонт и покраска кузова'),
('Реставрация', 'Реставрация классических автомобилей');

-- Заполнение нарядов
INSERT INTO Наряды (ID_автомобиля, ID_мастерской, Стоимость, Дата_выдачи, Плановая_дата_окончания, Реальная_дата_окончания, ID_категории) VALUES
(1, 3, 25000.00, '2023-05-10', '2023-05-15', '2023-05-17', 1),
(2, 1, 12000.00, '2023-05-12', '2023-05-14', '2023-05-14', 3),
(3, 2, 50000.00, '2023-05-01', '2023-05-20', '2023-05-25', 5),
(4, 3, 30000.00, '2023-06-01', '2023-06-05', '2023-06-10', 1),
(5, 2, 45000.00, '2023-06-02', '2023-06-15', NULL, 5),
(1, 1, 8000.00, '2023-06-10', '2023-06-12', '2023-06-11', 4);

-- Заполнение назначений механиков
INSERT INTO Назначения_механиков (ID_наряда, ID_механика) VALUES
(1, 1), (1, 3),
(2, 2),
(3, 4), (3, 1),
(4, 3),
(5, 4),
(6, 2);
SELECT TOP 1
    м.ФИО AS Механик,
    COUNT(*) AS Количество_ремонтов
FROM 
    Механики м
JOIN 
    Назначения_механиков нм ON м.ID_механика = нм.ID_механика
JOIN 
    Наряды н ON нм.ID_наряда = н.ID_наряда
JOIN 
    Автомобили а ON н.ID_автомобиля = а.ID_автомобиля
WHERE 
    а.Год_выпуска < 1945
GROUP BY 
    м.ФИО
ORDER BY 
    Количество_ремонтов DESC;

SELECT 
    а.Номер_авто,
    н.Дата_выдачи,
    н.Плановая_дата_окончания,
    н.Реальная_дата_окончания,
    DATEDIFF(day, н.Плановая_дата_окончания, н.Реальная_дата_окончания) AS Дней_задержки
FROM 
    Наряды н
JOIN 
    Автомобили а ON н.ID_автомобиля = а.ID_автомобиля
WHERE 
    а.Марка = 'Mercedes-Benz' AND а.Модель = '600'
    AND н.Реальная_дата_окончания > н.Плановая_дата_окончания;

SELECT 
    в.ФИО AS Владелец,
    м.ФИО AS Механик
FROM 
    Владельцы в
JOIN 
    Автомобили а ON в.ID_владельца = а.ID_владельца
JOIN 
    Наряды н ON а.ID_автомобиля = н.ID_автомобиля
JOIN 
    Назначения_механиков нм ON н.ID_наряда = нм.ID_наряда
JOIN 
    Механики м ON нм.ID_механика = м.ID_механика
GROUP BY 
    в.ФИО, м.ФИО
HAVING 
    COUNT(DISTINCT н.ID_наряда) = (
        SELECT COUNT(*) 
        FROM Наряды н2 
        JOIN Автомобили а2 ON н2.ID_автомобиля = а2.ID_автомобиля 
        WHERE а2.ID_владельца = в.ID_владельца
    );

WITH РазрядыПоКатегориям AS (
    SELECT 
        кр.Название_категории,
        м.Разряд,
        COUNT(*) AS Количество,
        RANK() OVER (PARTITION BY кр.Название_категории ORDER BY COUNT(*) DESC) AS Ранг
    FROM 
        Категории_работ кр
    JOIN 
        Наряды н ON кр.ID_категории = н.ID_категории
    JOIN 
        Назначения_механиков нм ON н.ID_наряда = нм.ID_наряда
    JOIN 
        Механики м ON нм.ID_механика = м.ID_механика
    GROUP BY 
        кр.Название_категории, м.Разряд
)
SELECT 
    Название_категории AS Категория_работ,
    Разряд
FROM 
    РазрядыПоКатегориям
WHERE 
    Ранг = 1;