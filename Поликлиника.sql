-- Таблица социальных статусов
CREATE TABLE Социальные_статусы (
    ID_статуса INT PRIMARY KEY IDENTITY(1,1),
    Название_статуса NVARCHAR(50) NOT NULL UNIQUE CHECK (Название_статуса IN ('учащийся', 'работающий', 'временно неработающий', 'инвалид', 'пенсионер'))
);

-- Таблица текущих состояний пациентов
CREATE TABLE Состояния_пациентов (
    ID_состояния INT PRIMARY KEY IDENTITY(1,1),
    Название_состояния NVARCHAR(50) NOT NULL UNIQUE CHECK (Название_состояния IN ('лечится', 'вылечился', 'направлен в стационар', 'умер'))
);

-- Таблица специализаций врачей
CREATE TABLE Специализации_врачей (
    ID_специализации INT PRIMARY KEY IDENTITY(1,1),
    Название_специализации NVARCHAR(50) NOT NULL UNIQUE
);

-- Таблица квалификаций врачей
CREATE TABLE Квалификации_врачей (
    ID_квалификации INT PRIMARY KEY IDENTITY(1,1),
    Название_квалификации NVARCHAR(20) NOT NULL UNIQUE CHECK (Название_квалификации IN ('1-я категория', '2-я категория', '3-я категория'))
);

-- Таблица пациентов
CREATE TABLE Пациенты (
    ID_пациента INT PRIMARY KEY IDENTITY(1,1),
    Номер_карты NVARCHAR(20) NOT NULL UNIQUE,
    Фамилия NVARCHAR(50) NOT NULL,
    Имя NVARCHAR(50) NOT NULL,
    Отчество NVARCHAR(50),
    Дата_рождения DATE NOT NULL,
    ID_социального_статуса INT NOT NULL,
    ID_текущего_состояния INT NOT NULL,
    FOREIGN KEY (ID_социального_статуса) REFERENCES Социальные_статусы(ID_статуса),
    FOREIGN KEY (ID_текущего_состояния) REFERENCES Состояния_пациентов(ID_состояния)
);

-- Таблица врачей
CREATE TABLE Врачи (
    ID_врача INT PRIMARY KEY IDENTITY(1,1),
    Фамилия NVARCHAR(50) NOT NULL,
    Имя NVARCHAR(50) NOT NULL,
    Отчество NVARCHAR(50),
    Должность NVARCHAR(100) NOT NULL,
    ID_специализации INT NOT NULL,
    ID_квалификации INT NOT NULL,
    FOREIGN KEY (ID_специализации) REFERENCES Специализации_врачей(ID_специализации),
    FOREIGN KEY (ID_квалификации) REFERENCES Квалификации_врачей(ID_квалификации)
);

-- Таблица диагнозов
CREATE TABLE Диагнозы (
    ID_диагноза INT PRIMARY KEY IDENTITY(1,1),
    Название_диагноза NVARCHAR(100) NOT NULL UNIQUE
);

-- Таблица лечебных случаев (связь пациентов и врачей)
CREATE TABLE Лечебные_случаи (
    ID_случая INT PRIMARY KEY IDENTITY(1,1),
    ID_пациента INT NOT NULL,
    ID_врача INT NOT NULL,
    ID_диагноза INT NOT NULL,
    Амбулаторное_лечение BIT NOT NULL,
    Срок_потери_трудоспособности INT CHECK (Срок_потери_трудоспособности >= 0),
    На_диспансерном_учете BIT NOT NULL,
    Дата_начала_лечения DATE NOT NULL,
    FOREIGN KEY (ID_пациента) REFERENCES Пациенты(ID_пациента),
    FOREIGN KEY (ID_врача) REFERENCES Врачи(ID_врача),
    FOREIGN KEY (ID_диагноза) REFERENCES Диагнозы(ID_диагноза)
);

-- Заполнение социальных статусов
INSERT INTO Социальные_статусы (Название_статуса) VALUES 
('учащийся'), ('работающий'), ('временно неработающий'), ('инвалид'), ('пенсионер');

-- Заполнение состояний пациентов
INSERT INTO Состояния_пациентов (Название_состояния) VALUES 
('лечится'), ('вылечился'), ('направлен в стационар'), ('умер');

-- Заполнение специализаций врачей
INSERT INTO Специализации_врачей (Название_специализации) VALUES
('терапевт'), ('невропатолог'), ('стоматолог'), ('кардиолог'), ('хирург');

-- Заполнение квалификаций врачей
INSERT INTO Квалификации_врачей (Название_квалификации) VALUES
('1-я категория'), ('2-я категория'), ('3-я категория');

-- Заполнение диагнозов
INSERT INTO Диагнозы (Название_диагноза) VALUES
('ОРВИ'), ('Гипертония'), ('Кариес'), ('Гастрит'), ('Сколиоз'), ('Бронхит');

-- Заполнение пациентов
INSERT INTO Пациенты (Номер_карты, Фамилия, Имя, Отчество, Дата_рождения, ID_социального_статуса, ID_текущего_состояния) VALUES
('P001', 'Иванов', 'Иван', 'Иванович', '1980-05-15', 2, 2),
('P002', 'Петрова', 'Мария', 'Сергеевна', '1955-11-20', 5, 1),
('P003', 'Сидоров', 'Алексей', 'Владимирович', '1972-03-10', 2, 3),
('P004', 'Кузнецова', 'Елена', 'Дмитриевна', '1948-07-25', 5, 2),
('P005', 'Васильев', 'Дмитрий', 'Николаевич', '1995-02-18', 1, 1),
('P006', 'Смирнова', 'Ольга', 'Игоревна', '1960-09-30', 5, 4);

-- Заполнение врачей
INSERT INTO Врачи (Фамилия, Имя, Отчество, Должность, ID_специализации, ID_квалификации) VALUES
('Ковалев', 'Андрей', 'Михайлович', 'Врач-терапевт', 1, 1),
('Николаева', 'Татьяна', 'Валерьевна', 'Врач-невропатолог', 2, 2),
('Белов', 'Сергей', 'Александрович', 'Врач-стоматолог', 3, 1),
('Громова', 'Ирина', 'Павловна', 'Врач-кардиолог', 4, 3),
('Федоров', 'Михаил', 'Игоревич', 'Врач-терапевт', 1, 2);

-- Заполнение лечебных случаев
INSERT INTO Лечебные_случаи (ID_пациента, ID_врача, ID_диагноза, Амбулаторное_лечение, Срок_потери_трудоспособности, На_диспансерном_учете, Дата_начала_лечения) VALUES
(1, 1, 1, 1, 5, 0, '2023-10-01'),
(2, 1, 2, 1, 0, 1, '2023-10-05'),
(2, 4, 4, 1, 0, 1, '2023-09-15'),
(3, 2, 5, 0, 10, 0, '2023-09-20'),
(4, 1, 1, 1, 7, 0, '2023-10-10'),
(4, 5, 2, 1, 0, 1, '2023-08-01'),
(5, 3, 3, 1, 2, 0, '2023-10-12'),
(6, 3, 3, 1, 3, 0, '2023-09-01'),
(6, 4, 4, 0, NULL, 0, '2023-09-05');

SELECT DISTINCT 
    CONCAT(в.Фамилия, ' ', LEFT(в.Имя, 1), '.', LEFT(в.Отчество, 1), '.') AS ФИО_врача
FROM 
    Врачи в
WHERE 
    NOT EXISTS (
        SELECT 1
        FROM Лечебные_случаи лс
        JOIN Пациенты п ON лс.ID_пациента = п.ID_пациента
        WHERE лс.ID_врача = в.ID_врача 
        AND п.ID_социального_статуса != (SELECT ID_статуса FROM Социальные_статусы WHERE Название_статуса = 'пенсионер')
    )
    AND EXISTS (
        SELECT 1
        FROM Лечебные_случаи лс
        JOIN Пациенты п ON лс.ID_пациента = п.ID_пациента
        WHERE лс.ID_врача = в.ID_врача
    );

	DECLARE @Всего_случаев INT = (
    SELECT COUNT(*) 
    FROM Лечебные_случаи лс 
    JOIN Диагнозы д ON лс.ID_диагноза = д.ID_диагноза 
    WHERE д.Название_диагноза = 'Кариес'
);

DECLARE @Смертельные_случаи INT = (
    SELECT COUNT(*) 
    FROM Лечебные_случаи лс 
    JOIN Диагнозы д ON лс.ID_диагноза = д.ID_диагноза 
    JOIN Пациенты п ON лс.ID_пациента = п.ID_пациента
    JOIN Состояния_пациентов с ON п.ID_текущего_состояния = с.ID_состояния
    WHERE д.Название_диагноза = 'Кариес' AND с.Название_состояния = 'умер'
);

SELECT 
    @Смертельные_случаи AS Умерло_от_кариеса,
    @Всего_случаев AS Всего_случаев_кариеса,
    CASE 
        WHEN @Всего_случаев = 0 THEN 0
        ELSE CAST(@Смертельные_случаи * 100.0 / @Всего_случаев AS DECIMAL(5,2))
    END AS Процент_смертности;

	SELECT 
    CONCAT(п.Фамилия, ' ', LEFT(п.Имя, 1), '.', LEFT(п.Отчество, 1), '.') AS ФИО_пациента
FROM 
    Пациенты п
WHERE NOT EXISTS (
    SELECT д.ID_диагноза
    FROM Диагнозы д
    WHERE NOT EXISTS (
        SELECT 1
        FROM Лечебные_случаи лс
        WHERE лс.ID_пациента = п.ID_пациента
        AND лс.ID_диагноза = д.ID_диагноза
    )
);