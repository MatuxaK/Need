-- Таблица категорий дисциплин
CREATE TABLE Категории_дисциплин (
    ID_категории INT PRIMARY KEY IDENTITY(1,1),
    Название_категории NVARCHAR(50) NOT NULL CHECK (Название_категории IN ('гуманитарная', 'математическая', 'компьютерная', 'общеинженерная', 'естественнонаучная', 'специальная'))
);

-- Таблица дисциплин
CREATE TABLE Дисциплины (
    ID_дисциплины INT PRIMARY KEY IDENTITY(1,1),
    Название_дисциплины NVARCHAR(100) NOT NULL,
    ID_категории INT NOT NULL,
    Объем_часов INT NOT NULL CHECK (Объем_часов > 0),
    FOREIGN KEY (ID_категории) REFERENCES Категории_дисциплин(ID_категории)
);

-- Таблица преподавателей
CREATE TABLE Преподаватели (
    ID_преподавателя INT PRIMARY KEY IDENTITY(1,1),
    ФИО NVARCHAR(100) NOT NULL,
    Должность NVARCHAR(50)
);

-- Таблица групп
CREATE TABLE Группы (
    ID_группы INT PRIMARY KEY IDENTITY(1,1),
    Код_группы NVARCHAR(10) NOT NULL UNIQUE,
    Курс INT NOT NULL CHECK (Курс BETWEEN 1 AND 6),
    Количество_студентов INT NOT NULL CHECK (Количество_студентов > 0)
);

-- Таблица учебного плана (связь групп и дисциплин)
CREATE TABLE Учебный_план (
    ID_записи INT PRIMARY KEY IDENTITY(1,1),
    ID_группы INT NOT NULL,
    ID_дисциплины INT NOT NULL,
    Общий_объем_часов INT NOT NULL CHECK (Общий_объем_часов > 0),
    FOREIGN KEY (ID_группы) REFERENCES Группы(ID_группы),
    FOREIGN KEY (ID_дисциплины) REFERENCES Дисциплины(ID_дисциплины),
    UNIQUE (ID_группы, ID_дисциплины)
);

-- Таблица контроля (экзамены/зачеты)
CREATE TABLE Контроль (
    ID_контроля INT PRIMARY KEY IDENTITY(1,1),
    ID_группы INT NOT NULL,
    ID_дисциплины INT NOT NULL,
    ID_преподавателя INT NOT NULL,
    Вид_контроля NVARCHAR(10) NOT NULL CHECK (Вид_контроля IN ('зачет', 'экзамен')),
    Дата DATE NOT NULL,
    FOREIGN KEY (ID_группы) REFERENCES Группы(ID_группы),
    FOREIGN KEY (ID_дисциплины) REFERENCES Дисциплины(ID_дисциплины),
    FOREIGN KEY (ID_преподавателя) REFERENCES Преподаватели(ID_преподавателя)
);

-- Заполнение категорий
INSERT INTO Категории_дисциплин (Название_категории) VALUES 
('гуманитарная'), ('математическая'), ('компьютерная'), ('общеинженерная'), ('естественнонаучная');

-- Заполнение дисциплин
INSERT INTO Дисциплины (Название_дисциплины, ID_категории, Объем_часов) VALUES
('Математический анализ', 2, 180),
('Программирование', 3, 150),
('Философия', 1, 90),
('Сопротивление материалов', 4, 120),
('Физика', 5, 150),
('Базы данных', 3, 120),
('История', 1, 60);

-- Заполнение преподавателей
INSERT INTO Преподаватели (ФИО, Должность) VALUES
('Иванов Иван Иванович', 'профессор'),
('Петрова Мария Сергеевна', 'доцент'),
('Сидоров Алексей Владимирович', 'старший преподаватель'),
('Кузнецова Елена Дмитриевна', 'доцент');

-- Заполнение групп
INSERT INTO Группы (Код_группы, Курс, Количество_студентов) VALUES
('ПК-13', 2, 25),
('МТ-21', 1, 30),
('ИВТ-42', 3, 20),
('СМ-15', 2, 28);

-- Заполнение учебного плана
INSERT INTO Учебный_план (ID_группы, ID_дисциплины, Общий_объем_часов) VALUES
(1, 1, 180), (1, 2, 150), (1, 3, 90), (1, 6, 120),
(2, 1, 180), (2, 4, 120), (2, 5, 150),
(3, 2, 150), (3, 6, 120), (3, 7, 60),
(4, 1, 180), (4, 3, 90), (4, 5, 150);

-- Заполнение контроля
INSERT INTO Контроль (ID_группы, ID_дисциплины, ID_преподавателя, Вид_контроля, Дата) VALUES
(1, 1, 1, 'экзамен', '2023-12-20'),
(1, 2, 3, 'экзамен', '2023-12-22'),
(1, 3, 2, 'зачет', '2023-12-15'),
(1, 6, 3, 'экзамен', '2023-12-25'),
(2, 1, 1, 'экзамен', '2023-12-20'),
(2, 4, 4, 'экзамен', '2023-12-21'),
(2, 5, 4, 'экзамен', '2023-12-22'),
(3, 2, 3, 'экзамен', '2023-12-23'),
(3, 6, 3, 'экзамен', '2023-12-24'),
(3, 7, 2, 'зачет', '2023-12-18'),
(4, 1, 1, 'экзамен', '2023-12-20'),
(4, 3, 2, 'зачет', '2023-12-19'),
(4, 5, 4, 'экзамен', '2023-12-21');

SELECT 
    g.Код_группы,
    DATEDIFF(day, MIN(к.Дата), MAX(к.Дата)) + 1 AS Продолжительность_сессии_дней
FROM 
    Группы g
JOIN 
    Контроль к ON g.ID_группы = к.ID_группы
WHERE 
    к.Вид_контроля IN ('экзамен', 'зачет')
GROUP BY 
    g.Код_группы;

SELECT TOP 1
    п.ФИО,
    SUM(g.Количество_студентов) AS Общее_число_студентов
FROM 
    Преподаватели п
JOIN 
    Контроль к ON п.ID_преподавателя = к.ID_преподавателя
JOIN 
    Группы g ON к.ID_группы = g.ID_группы
WHERE 
    к.Вид_контроля = 'экзамен'
GROUP BY 
    п.ФИО
ORDER BY 
    Общее_число_студентов DESC;

SELECT 
    кд.Название_категории,
    SUM(уп.Общий_объем_часов) AS Часы_по_категории,
    SUM(уп.Общий_объем_часов) * 100.0 / (SELECT SUM(Общий_объем_часов) FROM Учебный_план WHERE ID_группы = (SELECT ID_группы FROM Группы WHERE Код_группы = 'ПК-13')) AS Процент
FROM 
    Учебный_план уп
JOIN 
    Дисциплины д ON уп.ID_дисциплины = д.ID_дисциплины
JOIN 
    Категории_дисциплин кд ON д.ID_категории = кд.ID_категории
JOIN 
    Группы г ON уп.ID_группы = г.ID_группы
WHERE 
    г.Код_группы = 'ПК-13'
GROUP BY 
    кд.Название_категории;

SELECT 
    g.Код_группы,
    к.Дата,
    COUNT(*) AS Количество_экзаменов
FROM 
    Контроль к
JOIN 
    Группы g ON к.ID_группы = g.ID_группы
WHERE 
    к.Вид_контроля = 'экзамен'
GROUP BY 
    g.Код_группы, к.Дата
HAVING 
    COUNT(*) > 1;