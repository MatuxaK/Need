-- Таблица работ
CREATE TABLE Работы (
    ID_работы INT PRIMARY KEY IDENTITY(1,1),
    Шифр_работы NVARCHAR(20) NOT NULL UNIQUE,
    Название_работы NVARCHAR(200) NOT NULL,
    Трудоемкость_часы DECIMAL(10,2) NOT NULL CHECK (Трудоемкость_часы > 0),
    Дата_завершения DATE NOT NULL
);

-- Таблица должностей
CREATE TABLE Должности (
    ID_должности INT PRIMARY KEY IDENTITY(1,1),
    Название_должности NVARCHAR(100) NOT NULL UNIQUE,
    Описание NVARCHAR(500)
);

-- Таблица сотрудников
CREATE TABLE Сотрудники (
    ID_сотрудника INT PRIMARY KEY IDENTITY(1,1),
    Фамилия NVARCHAR(50) NOT NULL,
    Имя NVARCHAR(50) NOT NULL,
    Отчество NVARCHAR(50),
    ID_должности INT NOT NULL,
    Табельный_номер NVARCHAR(20) NOT NULL UNIQUE,
    FOREIGN KEY (ID_должности) REFERENCES Должности(ID_должности)
);

-- Таблица поручений
CREATE TABLE Поручения (
    ID_поручения INT PRIMARY KEY IDENTITY(1,1),
    ID_работы INT NOT NULL,
    ID_сотрудника INT NOT NULL,
    Дата_выдачи DATE NOT NULL,
    Трудоемкость_часы DECIMAL(10,2) NOT NULL CHECK (Трудоемкость_часы > 0),
    Плановая_дата_окончания DATE NOT NULL,
    Реальная_дата_окончания DATE,
    Процент_выполнения DECIMAL(5,2) NOT NULL CHECK (Процент_выполнения >= 0 AND Процент_выполнения <= 100) DEFAULT 0,
    FOREIGN KEY (ID_работы) REFERENCES Работы(ID_работы),
    FOREIGN KEY (ID_сотрудника) REFERENCES Сотрудники(ID_сотрудника),
    CHECK (Плановая_дата_окончания >= Дата_выдачи),
    CHECK (Реальная_дата_окончания >= Дата_выдачи OR Реальная_дата_окончания IS NULL)
);

-- Заполнение должностей
INSERT INTO Должности (Название_должности, Описание) VALUES
('Инженер-проектировщик', 'Разработка проектной документации'),
('Техник', 'Выполнение технических работ'),
('Руководитель проекта', 'Управление проектами'),
('Экономист', 'Расчет экономических показателей'),
('Аналитик', 'Анализ данных и подготовка отчетов');

-- Заполнение работ
INSERT INTO Работы (Шифр_работы, Название_работы, Трудоемкость_часы, Дата_завершения) VALUES
('PRJ-2023-001', 'Проект Гелиограф', 500.00, '2023-06-30'),
('PRJ-2023-002', 'Модернизация системы', 300.00, '2023-05-15'),
('PRJ-2023-003', 'Разработка ТЭО', 200.00, '2023-04-10'),
('PRJ-2023-004', 'Анализ рисков', 150.00, '2023-07-20'),
('PRJ-2023-005', 'Организация тендера', 180.00, '2023-03-31');

-- Заполнение сотрудников
INSERT INTO Сотрудники (Фамилия, Имя, Отчество, ID_должности, Табельный_номер) VALUES
('Иванов', 'Иван', 'Иванович', 1, 'T001'),
('Петрова', 'Мария', 'Сергеевна', 3, 'T002'),
('Сидоров', 'Алексей', 'Владимирович', 2, 'T003'),
('Кузнецова', 'Елена', 'Дмитриевна', 1, 'T004'),
('Васильев', 'Дмитрий', 'Николаевич', 4, 'T005');

-- Заполнение поручений
INSERT INTO Поручения (ID_работы, ID_сотрудника, Дата_выдачи, Трудоемкость_часы, Плановая_дата_окончания, Реальная_дата_окончания, Процент_выполнения) VALUES
(1, 1, '2023-01-10', 200.00, '2023-06-15', '2023-06-20', 100.00),
(1, 2, '2023-01-10', 100.00, '2023-06-20', '2023-06-25', 100.00),
(1, 3, '2023-01-15', 50.00, '2023-05-31', '2023-06-10', 100.00),
(2, 1, '2023-02-01', 150.00, '2023-05-10', '2023-05-05', 100.00),
(2, 4, '2023-02-01', 100.00, '2023-05-20', NULL, 40.00),
(3, 2, '2023-01-20', 100.00, '2023-04-05', '2023-04-01', 100.00),
(3, 5, '2023-01-20', 50.00, '2023-04-10', NULL, 30.00),
(4, 3, '2023-03-01', 80.00, '2023-07-15', NULL, 20.00),
(4, 4, '2023-03-01', 70.00, '2023-07-25', NULL, 15.00),
(5, 5, '2023-01-05', 100.00, '2023-03-25', '2023-03-20', 100.00),
(5, 1, '2023-01-05', 80.00, '2023-03-30', '2023-03-28', 100.00);

SELECT 
    с.Фамилия + ' ' + LEFT(с.Имя, 1) + '.' + LEFT(с.Отчество, 1) + '.' AS Сотрудник,
    COUNT(DISTINCT п.ID_работы) AS Количество_работ
FROM 
    Сотрудники с
JOIN 
    Поручения п ON с.ID_сотрудника = п.ID_сотрудника
WHERE 
    п.Дата_выдачи BETWEEN '2023-03-01' AND '2023-05-31'
GROUP BY 
    с.ID_сотрудника, с.Фамилия, с.Имя, с.Отчество
ORDER BY 
    Количество_работ DESC;

SELECT 
    р.Шифр_работы,
    р.Название_работы,
    р.Дата_завершения,
    AVG(п.Процент_выполнения) AS Средний_процент_выполнения
FROM 
    Работы р
JOIN 
    Поручения п ON р.ID_работы = п.ID_работы
WHERE 
    (п.Реальная_дата_окончания IS NULL AND GETDATE() >= р.Дата_завершения)
    OR (п.Реальная_дата_окончания > р.Дата_завершения)
GROUP BY 
    р.ID_работы, р.Шифр_работы, р.Название_работы, р.Дата_завершения
HAVING 
    AVG(п.Процент_выполнения) <= 50;


SELECT DISTINCT
    д.Название_должности,
    COUNT(п.ID_сотрудника) OVER (PARTITION BY д.ID_должности) AS Количество_сотрудников
FROM 
    Должности д
JOIN 
    Сотрудники с ON д.ID_должности = с.ID_должности
JOIN 
    Поручения п ON с.ID_сотрудника = п.ID_сотрудника
JOIN 
    Работы р ON п.ID_работы = р.ID_работы
WHERE 
    р.Название_работы = 'Проект Гелиограф'
ORDER BY 
    Количество_сотрудников DESC;

SELECT 
    с.Фамилия + ' ' + LEFT(с.Имя, 1) + '.' + LEFT(с.Отчество, 1) + '.' AS Сотрудник,
    д.Название_должности,
    SUM(п.Трудоемкость_часы) AS Общая_трудоемкость,
    COUNT(DISTINCT п.ID_работы) AS Количество_работ
FROM 
    Сотрудники с
JOIN 
    Должности д ON с.ID_должности = д.ID_должности
JOIN 
    Поручения п ON с.ID_сотрудника = п.ID_сотрудника
WHERE 
    п.Реальная_дата_окончания IS NULL
GROUP BY 
    с.ID_сотрудника, с.Фамилия, с.Имя, с.Отчество, д.Название_должности
ORDER BY 
    Общая_трудоемкость DESC;
